/*! For license information please see index.d655fd6e.js.LICENSE.txt */
(()=>{"use strict";var __webpack_modules__={"./src/module/basketModule.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addCardToBasket: () => (/* binding */ addCardToBasket),\n/* harmony export */   updateBasketCount: () => (/* binding */ updateBasketCount)\n/* harmony export */ });\nvar basketItems = {};\nvar basketCount = document.querySelector('.header-basket_count');\n// Функция для обновления количества книг в корзине и видимости .basket_count\nfunction updateBasketCount() {\n  var itemCount = Object.keys(basketItems).length;\n  basketCount.textContent = itemCount;\n\n  // Обновляем видимость .basket_count\n  if (itemCount > 0) {\n    basketCount.style.display = 'block'; // Показываем .basket_count при наличии товаров\n  } else {\n    basketCount.style.display = 'none'; // Скрываем .basket_count при пустой корзине\n  }\n}\n// Функция для добавления книги в корзину\nfunction addCardToBasket(book, buttonBuy) {\n  var bookCard = buttonBuy.closest('.book-card');\n  var title = bookCard.querySelector('.title').textContent;\n  if (basketItems[title]) {\n    // Если книга уже в корзине, убираем ее\n    delete basketItems[title];\n    buttonBuy.textContent = 'buy now';\n  } else {\n    // Если книги нет в корзине, добавляем ее\n    basketItems[title] = book;\n    buttonBuy.textContent = 'in the cart';\n  }\n\n  // Обновляем количество книг в корзине\n  updateBasketCount();\n}\n\n//# sourceURL=webpack://bookshop/./src/module/basketModule.js?")},"./src/module/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scss_main_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scss/main.scss */ \"./src/scss/main.scss\");\n/* harmony import */ var _basketModule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./basketModule */ \"./src/module/basketModule.js\");\n/* harmony import */ var _slider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./slider */ \"./src/module/slider.js\");\nObject(function webpackMissingModule() { var e = new Error(\"Cannot find module '../bookLoader'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n\n\n// import { truncateDescription } from './utils';\n\n\nvar entities = [{\n  mainSliderImage: './src/img/banner1.png'\n}, {\n  mainSliderImage: './src/img/banner2.png'\n}, {\n  mainSliderImage: './src/img/banner3.png'\n}];\nvar mainSliderImage = document.querySelectorAll('.main_slider-image');\nvar mainSliderDots = document.querySelectorAll('.main_slider-dot');\n// const sectionContainer = document.querySelector('.section-container_book');\n// let cards;\n// let loadMoreButton;\n\nmainSliderDots.forEach(function (dot, i) {\n  dot.addEventListener('click', function () {\n    return (0,_slider__WEBPACK_IMPORTED_MODULE_2__.setSliderByDot)(i, mainSliderImage, mainSliderDots);\n  });\n});\nsetInterval(function () {\n  (0,_slider__WEBPACK_IMPORTED_MODULE_2__.nextSlide)(mainSliderImage, mainSliderDots);\n}, 5000);\n(0,_slider__WEBPACK_IMPORTED_MODULE_2__.showSlide)(_slider__WEBPACK_IMPORTED_MODULE_2__.currentSlide, mainSliderImage, mainSliderDots);\n(0,_basketModule__WEBPACK_IMPORTED_MODULE_1__.updateBasketCount)();\n\n// let startIndex = typeof startIndex === 'number' ? startIndex : 0;\n// const booksPerPage = 6;\n// let allBooksLoaded = false; // Флаг для отслеживания всех загруженных книг\n// let booksData = [];\n\n// function loadBooks(category) {\n//     if (allBooksLoaded) {\n//         // Если все книги уже загружены, выход\n//         return;\n//     }\n\n//     fetch(`https://www.googleapis.com/books/v1/volumes?q=subject:${category}&key=AIzaSyAJd3kICh5o-BwHt48IcAwt9X_MWxinyR4&printType=books&startIndex=${startIndex}&maxResults=${booksPerPage}&langRestrict=en`)\n//         .then(response => response.json())\n//         .then(data => {\n//             console.log(data); // Добавьте эту строку для вывода ответа на консоль\n//             cards = data;\n//             if (cards.items && Array.isArray(cards.items)) {\n//                 cards.items.forEach(item => {\n//                     const title = item.volumeInfo.title || 'Заголовок отсутствует';\n//                     const authors = item.volumeInfo.authors ? item.volumeInfo.authors.join(', ') : 'Автор неизвестен';\n//                     const thumbnail = item.volumeInfo.imageLinks ? item.volumeInfo.imageLinks.thumbnail : 'https://placebear.com/g/212/300';\n//                     const rating = item.volumeInfo.averageRating || 0;\n//                     const ratingsCount = item.volumeInfo.ratingsCount || 0;\n//                     const description = item.volumeInfo.description || 'Описание отсутствует';\n//                     const retailPrice = item.saleInfo && item.saleInfo.retailPrice ? item.saleInfo.retailPrice.amount : null;\n//                     const truncatedDescription = truncateDescription(description, 91);\n\n//                     const bookCard = document.createElement('div');\n//                     bookCard.classList.add('book-card');\n//                     bookCard.innerHTML = `\n//                         <a href=\"#\"><img class=\"image\" src=\"${thumbnail}\" alt=\"${title}\"></a>\n//                         <div class=\"info-books\">\n//                         <p class=\"authors\">${authors}</p>\n//                         <a href=\"#\"><h1 class=\"title\">${title}</h1></a>\n//                         <a href=\"#\"><div class=\"ratings-box\">\n//                         <div class=\"average-rating\">\n//                           <div class=\"stars\">${generateStars(rating)}</div>\n//                         </div>\n//                         <p class=\"ratings-count\">${ratingsCount} review</p>\n//                         </div></a>\n//                         <p class=\"description\">${truncatedDescription}</p>\n//                         ${retailPrice ? `<p class=\"sale-info retail-prise\">$ ${retailPrice}</p>` : ''}\n//                         <button class=\"button-buy\">buy now</button>\n//                         </div>\n//                     `;\n//                     const buttonBuy = bookCard.querySelector('.button-buy');\n//                     buttonBuy.addEventListener('click', () => addCardToBasket(item, buttonBuy)); // Передаем объект item и кнопку как аргументы                  \n\n//                     function generateStars(rating) {\n//                         let starsHTML = '';\n//                         for (let i = 1; i <= 5; i++) {\n//                             const starHTML = `\n//                                 <svg width=\"12\" height=\"11\" viewBox=\"0 0 12 11\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n//                                     <path d=\"M6 0L7.80568 3.5147L11.7063 4.1459L8.92165 6.9493L9.52671 10.8541L6 9.072L2.47329 10.8541L3.07835 6.9493L0.293661 4.1459L4.19432 3.5147L6 0Z\" fill=\"${i <= rating ? '#F2C94C' : '#EEEDF5'}\"/>\n//                                 </svg>\n//                             `;\n//                             starsHTML += starHTML;\n//                         }\n//                         return starsHTML;\n//                     }\n//                     sectionContainer.appendChild(bookCard);\n//                     booksData.push(item); // Добавляем данные о книге в массив\n//                 });\n//                 // Используем эту функцию при инициализации страницы и при смене категории\n//                 addLoadMoreHandler();\n//                 // Добавляем кнопку в контейнер\n//                 sectionContainer.appendChild(loadMoreButton);\n\n//                 startIndex += booksPerPage;// Увеличиваем индекс начала следующей порции книг\n//             } else {\n//                 console.error('Полученные данные некорректны или отсутствуют.');\n//             }\n//         })\n//         .catch(error => {\n//             console.error('Произошла ошибка при запросе к API:', error);\n//         });\n// }\n\n// function addLoadMoreHandler() {\n//     if (!loadMoreButton) {\n//         // Создаем кнопку \"Load more\", только если она еще не была создана\n//         loadMoreButton = document.createElement('button');\n//         loadMoreButton.classList.add('books-button_more');\n//         loadMoreButton.innerHTML = 'Load more';\n\n//         // Определяем новый обработчик клика\n//         const loadMoreClickHandler = () => {\n//             const activeCategory = document.querySelector('.isade-category.active-category');\n//             const selectedCategory = activeCategory.textContent;\n//             loadBooks(selectedCategory);\n//         };\n//         // Добавляем обработчик клика к кнопке\n//         loadMoreButton.addEventListener('click', loadMoreClickHandler);\n//     }\n// }\n\nvar categories = document.querySelectorAll('.isade-category');\nvar defaultCategory = categories[0]; // Первая категория по умолчанию\ndefaultCategory.classList.add('active-category');\ncategories.forEach(function (category) {\n  category.addEventListener('click', function () {\n    if (!this.classList.contains('active-category')) {\n      var sectionContainers = document.querySelector('.section-container_book');\n      // Очищаем контейнер перед загрузкой новых книг\n      sectionContainers.innerHTML = '';\n\n      // Убираем класс 'active-category' у текущей активной категории\n      var activeCategory = document.querySelector('.isade-category.active-category');\n      if (activeCategory) {\n        activeCategory.classList.remove('active-category');\n      }\n      // Добавляем класс 'active-category' к выбранной категории\n      this.classList.add('active-category');\n      var selectedCategory = this.textContent;\n      Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../bookLoader'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()) = 0; // Сбросить startIndex при смене категории\n      Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../bookLoader'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()) = false; // Сбросить флаг, так как мы загружаем новую категорию\n      Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../bookLoader'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()) = []; // Очищаем массив с данными о книгах\n\n      Object(function webpackMissingModule() { var e = new Error(\"Cannot find module '../bookLoader'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(selectedCategory);\n    }\n  });\n});\nObject(function webpackMissingModule() { var e = new Error(\"Cannot find module '../bookLoader'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(categories[0].textContent);\nObject(function webpackMissingModule() { var e = new Error(\"Cannot find module '../bookLoader'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(categories[0].textContent);\n\n//# sourceURL=webpack://bookshop/./src/module/index.js?")},"./src/module/slider.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   currentSlide: () => (/* binding */ currentSlide),\n/* harmony export */   nextSlide: () => (/* binding */ nextSlide),\n/* harmony export */   setSliderByDot: () => (/* binding */ setSliderByDot),\n/* harmony export */   showSlide: () => (/* binding */ showSlide)\n/* harmony export */ });\nvar currentSlide = 0;\nfunction showSlide(index, mainSliderImage, mainSliderDots) {\n  mainSliderImage.forEach(function (image, i) {\n    if (i === index) {\n      image.style.display = 'block';\n      mainSliderDots[i].classList.add('active');\n    } else {\n      image.style.display = 'none';\n      mainSliderDots[i].classList.remove('active');\n    }\n  });\n  mainSliderDots.forEach(function (dot, i) {\n    if (i === index) {\n      dot.classList.add('disabled');\n    } else {\n      dot.classList.remove('disabled');\n    }\n  });\n}\nfunction setSliderByDot(dotIndex, mainSliderImage, mainSliderDots) {\n  console.log('setSliderByDot:', mainSliderImage, mainSliderDots);\n  currentSlide = dotIndex;\n  showSlide(currentSlide, mainSliderImage, mainSliderDots);\n}\nfunction nextSlide(mainSliderImage, mainSliderDots) {\n  console.log('nextSlide:', mainSliderImage, mainSliderDots);\n  currentSlide = (currentSlide + 1) % mainSliderImage.length;\n  showSlide(currentSlide, mainSliderImage, mainSliderDots);\n}\n\n//# sourceURL=webpack://bookshop/./src/module/slider.js?")},"./src/scss/main.scss":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://bookshop/./src/scss/main.scss?")}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}__webpack_require__.d=(e,n)=>{for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/module/index.js")})();