/*! For license information please see index.6409de7d.js.LICENSE.txt */
(()=>{"use strict";var __webpack_modules__={"./src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scss_main_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scss/main.scss */ \"./src/scss/main.scss\");\n\n// import { loadBooks, renderBooks, loadMoreBooks } from './APIBooks.js';\n\nvar entities = [{\n  mainSliderImage: './src/img/banner1.png'\n}, {\n  mainSliderImage: './src/img/banner2.png'\n}, {\n  mainSliderImage: './src/img/banner3.png'\n}];\nvar mainSliderImage = document.querySelectorAll('.main_slider-image');\nvar mainSliderDots = document.querySelectorAll('.main_slider-dot');\nvar currentSlide = 0;\nfunction showSlide(index) {\n  mainSliderImage.forEach(function (image, i) {\n    if (i === index) {\n      image.style.display = 'block';\n      mainSliderDots[i].classList.add('active');\n    } else {\n      image.style.display = 'none';\n      mainSliderDots[i].classList.remove('disabled');\n    }\n  });\n  mainSliderDots.forEach(function (dot, i) {\n    if (i === index) {\n      dot.classList.add('disabled');\n    } else {\n      dot.classList.remove('disabled');\n    }\n  });\n}\nfunction setSliderByDot(dotIndex) {\n  currentSlide = dotIndex;\n  showSlide(currentSlide);\n}\nmainSliderDots.forEach(function (dot, i) {\n  dot.addEventListener('click', function () {\n    setSliderByDot(i);\n  });\n});\nfunction nextSlide() {\n  currentSlide = (currentSlide + 1) % mainSliderImage.length;\n  showSlide(currentSlide);\n}\nsetInterval(function () {\n  nextSlide();\n}, 5000);\nshowSlide(currentSlide);\nvar loadMoreButton = document.getElementById('load-more-button');\nvar startIndex = 0; // Начальный индекс для загрузки\nvar maxResults = 6; // Максимальное количество результатов\n\nfunction loadBooks(category, startIndex) {\n  // Используем переменную category для построения правильной ссылки к API\n  var apiUrl = \"https://www.googleapis.com/books/v1/volumes?q=subject:\".concat(category, \"&key=AIzaSyAJd3kICh5o-BwHt48IcAwt9X_MWxinyR4&printType=books&startIndex=\").concat(startIndex, \"&maxResults=\").concat(maxResults, \"&langRestrict=en\");\n\n  // const bookContainer = document.querySelector(\".section-container\");\n  // bookContainer.innerHTML = \"\";\n\n  fetch(apiUrl).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log(data); // Добавьте эту строку для вывода ответа на консоль\n\n    if (data.items && Array.isArray(data.items)) {\n      var bookContainer = document.querySelector(\".section-container\");\n      // Очищаем контейнер только если startIndex равен 0 (новый запрос)\n      if (startIndex === 0) {\n        bookContainer.innerHTML = \"\";\n      }\n      data.items.forEach(function (item) {\n        var title = item.volumeInfo.title || 'Заголовок отсутствует';\n        var authors = item.volumeInfo.authors ? item.volumeInfo.authors.join(', ') : 'Автор неизвестен';\n        var thumbnail = item.volumeInfo.imageLinks ? item.volumeInfo.imageLinks.thumbnail : 'https://placebear.com/g/212/300';\n        var rating = item.volumeInfo.averageRating || 0;\n        var ratingsCount = item.volumeInfo.ratingsCount || 0;\n        var description = item.volumeInfo.description || 'Описание отсутствует';\n        var retailPrice = item.saleInfo && item.saleInfo.retailPrice ? item.saleInfo.retailPrice.amount : null;\n        var truncatedDescription = truncateDescription(description, 91);\n        var bookCard = document.createElement('div');\n        bookCard.classList.add('book-card');\n        bookCard.innerHTML = \"\\n                        <img class=\\\"image\\\" src=\\\"\".concat(thumbnail, \"\\\" alt=\\\"\").concat(title, \"\\\">\\n                        <div class=\\\"info-books\\\">\\n                        <p class=\\\"authors\\\">\").concat(authors, \"</p>\\n                        <h1 class=\\\"title\\\">\").concat(title, \"</h1>\\n                        <div class=\\\"ratings-box\\\">\\n                        <img class=\\\"average-rating\\\">\").concat(rating, \" / 5</img>\\n                        <p class=\\\"ratings-count\\\">\").concat(ratingsCount, \" review</p>\\n                        </div>\\n                        <p class=\\\"description\\\">\").concat(truncatedDescription, \"</p>\\n                        \").concat(retailPrice ? \"<p class=\\\"sale-info retail-prise\\\">$ \".concat(retailPrice, \"</p>\") : '', \"\\n                        <button class=\\\"button-buy\\\">buy now</button>\\n                        </div>\\n                    \");\n        var stars = document.createElement('div');\n        stars.classList.add('stars');\n        for (var i = 1; i <= 5; i++) {\n          var star = document.createElement('img');\n          star.textContent = i <= rating ? '⭐' : '☆';\n          stars.appendChild(star);\n        }\n        bookCard.appendChild(stars);\n        bookContainer.appendChild(bookCard);\n      });\n      if (data.items.length < maxResults) {\n        loadMoreButton.style.display = 'none';\n      }\n    } else {\n      console.error('Полученные данные некорректны или отсутствуют.');\n    }\n  })[\"catch\"](function (error) {\n    console.error('Произошла ошибка при запросе к API:', error);\n  });\n}\nfunction handleCategoryClick(category) {\n  // Ваша логика для обработки клика по категории\n  loadBooks(category, 0); // Начнем с начального индекса\n}\n\nloadMoreButton.addEventListener('click', function () {\n  startIndex += maxResults; // Увеличиваем индекс для загрузки следующей порции книг\n  var activeCategory = document.querySelector('.category.active-category');\n  if (activeCategory) {\n    handleCategoryClick(activeCategory.textContent);\n  }\n});\nvar categories = document.querySelectorAll('.category');\nvar defaultCategory = categories[0]; // Первая категория по умолчанию\ndefaultCategory.classList.add('active-category');\ncategories.forEach(function (category) {\n  category.addEventListener('click', function () {\n    if (!this.classList.contains('active-category')) {\n      // Убираем класс 'active-category' у текущей активной категории\n      var activeCategory = document.querySelector('.category.active-category');\n      if (activeCategory) {\n        activeCategory.classList.remove('active-category');\n      }\n\n      // Добавляем класс 'active-category' к выбранной категории\n      this.classList.add('active-category');\n      handleCategoryClick(this.textContent);\n    }\n  });\n});\nhandleCategoryClick(defaultCategory.textContent);\nfunction truncateDescription(description, maxCharacters) {\n  if (description.length <= maxCharacters) {\n    return description; // Если текст короче или равен максимальному количеству символов, не обрезаем его\n  } else {\n    return description.slice(0, maxCharacters) + '...'; // Обрезаем текст до максимального количества символов и добавляем многоточие\n  }\n}\n\n// function truncateDescription(description) {\n//     const maxSentences = 3;\n//     const sentences = description.split(/[.]/);\n//     const truncatedSentences = sentences.slice(0, maxSentences);\n//     const truncatedDescription = truncatedSentences.join('\\n') + '...';\n//     return truncatedDescription;\n// }\n\n// function loadBooks(category) {\n//     const bookContainer = document.querySelector(\".section-container\");\n//     bookContainer.innerHTML = \"\";\n\n//     fetch(`https://www.googleapis.com/books/v1/volumes?q=subject:${category}&key=AIzaSyAJd3kICh5o-BwHt48IcAwt9X_MWxinyR4&printType=books&startIndex=0&maxResults=6&langRestrict=en`)\n//         .then(response => response.json())\n//         .then(data => {\n\n//             console.log(data); // Добавьте эту строку для вывода ответа на консоль\n\n//             if (data.items && Array.isArray(data.items)) {\n//                 const bookContainer = document.querySelector(\".section-container\");\n//                 bookContainer.innerHTML = \"\"; // Очистите содержимое контейнера перед добавлением новых карточек\n//                 data.items.forEach(item => {\n//                     const title = item.volumeInfo.title || 'Заголовок отсутствует';\n//                     const authors = item.volumeInfo.authors ? item.volumeInfo.authors.join(', ') : 'Автор неизвестен';\n//                     const thumbnail = item.volumeInfo.imageLinks ? item.volumeInfo.imageLinks.thumbnail : 'https://placebear.com/g/212/300';\n//                     const rating = item.volumeInfo.averageRating || 0;\n//                     const ratingsCount = item.volumeInfo.ratingsCount || 0;\n//                     const description = item.volumeInfo.description || 'Описание отсутствует';\n//                     const retailPrice = item.saleInfo && item.saleInfo.retailPrice ? item.saleInfo.retailPrice.amount : null;\n\n//                     const truncatedDescription = truncateDescription(description, 91);\n\n//                     const bookCard = document.createElement('div');\n//                     bookCard.classList.add('book-card');\n//                     bookCard.innerHTML = `\n//                         <img class=\"image\" src=\"${thumbnail}\" alt=\"${title}\">\n//                         <div class=\"info-books\">\n//                         <p class=\"authors\">${authors}</p>\n//                         <h1 class=\"title\">${title}</h1>\n//                         <div class=\"ratings-box\">\n//                         <img class=\"average-rating\">${rating} / 5</img>\n//                         <p class=\"ratings-count\">${ratingsCount} review</p>\n//                         </div>\n//                         <p class=\"description\">${truncatedDescription}</p>\n//                         ${retailPrice ? `<p class=\"sale-info retail-prise\">$ ${retailPrice}</p>` : ''}\n//                         <button class=\"button-buy\">buy now</button>\n//                         </div>\n//                     `;\n\n//                     const stars = document.createElement('div');\n//                     stars.classList.add('stars');\n//                     for (let i = 1; i <= 5; i++) {\n//                         const star = document.createElement('img');\n//                         star.textContent = i <= rating ? '⭐' : '☆';\n//                         stars.appendChild(star);\n//                     }\n\n//                     bookCard.appendChild(stars);\n\n//                     bookContainer.appendChild(bookCard);\n//                 });\n\n//             } else {\n//                 console.error('Полученные данные некорректны или отсутствуют.');\n//             }\n//         })\n//         .catch(error => {\n//             console.error('Произошла ошибка при запросе к API:', error);\n//         });\n// }\n\n// const categories = document.querySelectorAll('.category');\n// const defaultCategory = categories[0]; // Первая категория по умолчанию\n// defaultCategory.classList.add('active-category');\n\n// categories.forEach(category => {\n//     category.addEventListener('click', function () {\n//         if (!this.classList.contains('active-category')) {\n//             // Убираем класс 'active-category' у текущей активной категории\n//             const activeCategory = document.querySelector('.category.active-category');\n//             if (activeCategory) {\n//                 activeCategory.classList.remove('active-category');\n//             }\n\n//             // Добавляем класс 'active-category' к выбранной категории\n//             this.classList.add('active-category');\n\n//             const selectedCategory = this.textContent;\n//             loadBooks(selectedCategory);\n//         }\n//     });\n// });\n\n// loadBooks(categories[0].textContent);\n\n// function truncateDescription(description, maxCharacters) {\n//     if (description.length <= maxCharacters) {\n//         return description; // Если текст короче или равен максимальному количеству символов, не обрезаем его\n//     } else {\n//         return description.slice(0, maxCharacters) + '...'; // Обрезаем текст до максимального количества символов и добавляем многоточие\n//     }\n// }\n\n// function truncateDescription(description) {\n//     const maxSentences = 3;\n//     const sentences = description.split(/[.]/);\n//     const truncatedSentences = sentences.slice(0, maxSentences);\n//     const truncatedDescription = truncatedSentences.join('\\n') + '...';\n//     return truncatedDescription;\n// }\n\n//# sourceURL=webpack://bookshop/./src/index.js?")},"./src/scss/main.scss":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://bookshop/./src/scss/main.scss?")}},__webpack_module_cache__={};function __webpack_require__(n){var e=__webpack_module_cache__[n];if(void 0!==e)return e.exports;var t=__webpack_module_cache__[n]={exports:{}};return __webpack_modules__[n](t,t.exports,__webpack_require__),t.exports}__webpack_require__.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/index.js")})();